Questions:

Q1. Where you did the same calculations with NumPy and Pandas, which did you find easier to work with? Which code do you think is easier to read?
A. I did the similar calculations in the part of 'Getting started with NumPy' and 'Getting started with Pandas' while computing and analysing the data
   which was given in totals.csv and counts.csv. It is much nicer to work with Pandas than NumPy since it is like relations/tables where it is easier 
   to read and hence easier to analyse data. It is easy to mold the data and fetch the results. Moreover, while coding, it is easier to work with 
   concrete rows and columns while working with Pandas which is missing in NumPy. It is definetely easier to read Panda's code.

Q2. What were the running times of the two pivot_months_* functions? How can you explain the difference?
A. Running times for both functions are fluctuating. One of the readings I got are:
   For pivot_months_pandas = 16.2 ms ± 283 µs per loop (mean ± std. dev. of 7 runs, 100 loops each)
   For pivot_months_loops = 618 ms ± 10.4 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)
   The reason for this difference in runtimes can be seen by looking at the way how loops work v/s how pandas in built functions work. The functions 
   in pandas library treat the computations using matrix operations which can be performed in parallel on the machines and hence it is computed faster
   by using multiple threads working at the same time. Whereas, for loops, the computations are done sequentially and hence, it takes more time than
   pandas library functions.